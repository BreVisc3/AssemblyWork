Test date: 10/07/24  20:16:46 
The number of times you used the grading program is 13 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
TABS Grading System Version 4.0
Student: Last=Viscount             First=Brendan              Type=Individual          
Grading and testing history log
       User Test.    Date: 09/30/24  18:25:41  tabin.1      testout      
       User Test.    Date: 09/30/24  18:33:02  tabin.1      testout      
       User Test.    Date: 09/30/24  18:39:17  tabin.1      testout      
       User Test.    Date: 09/30/24  18:41:56  tabin.1      testout      
       User Test.    Date: 09/30/24  18:58:50  tabin.1      testout      
       User Test.    Date: 09/30/24  19:02:09  tabin.1      testout      
       User Test.    Date: 09/30/24  19:17:40  tabin.1      testout      
       User Test.    Date: 09/30/24  19:18:59  tabin.1      testout      
       User Test.    Date: 09/30/24  19:34:19  tabin.1      testout      
       User Test.    Date: 09/30/24  19:37:30  tabin.1      testout      
       User Test.    Date: 09/30/24  19:43:03  tabin.1      testout      
       User Test.    Date: 10/03/24  09:38:36  tabin.1      testout      
       User Test.    Date: 10/03/24  09:40:00  tabin.1      testout      
       User Test.    Date: 10/03/24  09:43:56  tabin.1      testout      
       User Test.    Date: 10/03/24  09:53:23  tabin.1      testout      
       User Test.    Date: 10/03/24  10:13:58  tabin.1      testout      
       User Test.    Date: 10/03/24  10:15:16  tabin.1      testout      
       User Test.    Date: 10/03/24  10:17:23  tabin.1      testout      
       User Test.    Date: 10/03/24  10:17:57  tabin.1      testout      
       User Test.    Date: 10/03/24  10:18:58  tabin.1      testout      
       User Test.    Date: 10/03/24  10:20:14  tabin.1      testout      
       User Test.    Date: 10/03/24  10:21:19  tabin.1      testout      
       User Test.    Date: 10/03/24  10:21:40  tabin.1      testout      
       User Test.    Date: 10/03/24  10:22:03  tabin.1      testout      
       User Test.    Date: 10/03/24  10:34:19  tabin.1      testout      
       User Test.    Date: 10/03/24  10:34:54  tabin.2      testout      
       User Test.    Date: 10/03/24  10:35:12  tabin.3      testout      
   *** Grading Run.  Date: 10/03/24  10:36:11 
       User Test.    Date: 10/03/24  10:41:02  tabin.1      testout      
       User Test.    Date: 10/03/24  14:39:03  tabin.1      testout      
       User Test.    Date: 10/03/24  14:39:11  tabin.2      testout      
       User Test.    Date: 10/03/24  14:39:13  tabin.3      testout      
       User Test.    Date: 10/03/24  14:39:14  tabin.4      testout      
   *** Grading Run.  Date: 10/03/24  14:39:18 
       User Test.    Date: 10/03/24  14:39:59  tabin.1      testout      
       User Test.    Date: 10/03/24  14:40:02  tabin.2      testout      
       User Test.    Date: 10/03/24  14:40:04  tabin.3      testout      
       User Test.    Date: 10/03/24  14:40:05  tabin.4      testout      
   *** Grading Run.  Date: 10/03/24  14:40:11 
       User Test.    Date: 10/05/24  09:59:27  tabin.1      testout      
       User Test.    Date: 10/05/24  09:59:30  tabin.2      testout      
       User Test.    Date: 10/05/24  09:59:32  tabin.3      testout      
   *** Grading Run.  Date: 10/05/24  09:59:36 
       User Test.    Date: 10/05/24  10:01:11  tabin.1      testout      
       User Test.    Date: 10/05/24  10:01:12  tabin.2      testout      
       User Test.    Date: 10/05/24  10:01:14  tabin.3      testout      
   *** Grading Run.  Date: 10/05/24  10:01:15 
       User Test.    Date: 10/05/24  10:03:25  tabin.1      testout      
       User Test.    Date: 10/05/24  10:03:27  tabin.2      testout      
       User Test.    Date: 10/05/24  10:03:28  tabin.3      testout      
   *** Grading Run.  Date: 10/05/24  10:03:29 
       User Test.    Date: 10/05/24  10:07:51  tabin.1      testout      
       User Test.    Date: 10/05/24  10:07:53  tabin.2      testout      
   *** Grading Run.  Date: 10/05/24  10:07:57 
       User Test.    Date: 10/05/24  10:08:21  tabin.4      testout      
       User Test.    Date: 10/05/24  10:11:06  okayt        testout      
       User Test.    Date: 10/07/24  10:23:38  gradin.1     testout      
       User Test.    Date: 10/07/24  10:27:21  gradin.1     testout      
       User Test.    Date: 10/07/24  10:28:26  gradin.1     testout      
       User Test.    Date: 10/07/24  10:31:37  tabin.1      testout      
       User Test.    Date: 10/07/24  10:33:54  gradin.1     testout      
       User Test.    Date: 10/07/24  10:33:55  tabin.1      testout      
       User Test.    Date: 10/07/24  10:35:47  gradin.1     testout      
       User Test.    Date: 10/07/24  10:35:53  tabin.1      testout      
       User Test.    Date: 10/07/24  10:35:56  tabin.2      testout      
       User Test.    Date: 10/07/24  10:38:07  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  10:38:15 
       User Test.    Date: 10/07/24  10:38:22  tabin.1      testout      
       User Test.    Date: 10/07/24  10:38:23  tabin.2      testout      
       User Test.    Date: 10/07/24  10:38:25  tabin.3      testout      
       User Test.    Date: 10/07/24  10:38:27  tabin.4      testout      
       User Test.    Date: 10/07/24  10:38:32  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  10:42:01 
       User Test.    Date: 10/07/24  10:44:28  gradid.p17   testout      
       User Test.    Date: 10/07/24  10:48:04  gradin.1     testout      
       User Test.    Date: 10/07/24  10:51:27  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  10:53:44 
       User Test.    Date: 10/07/24  10:54:04  gradin.1     testout      
       User Test.    Date: 10/07/24  10:55:58  gradin.1     testout      
       User Test.    Date: 10/07/24  12:26:59  gradin.1     testout      
       User Test.    Date: 10/07/24  12:31:57  gradin.1     testout      
       User Test.    Date: 10/07/24  12:34:39  gradin.1     testout      
       User Test.    Date: 10/07/24  12:36:38  gradin.1     testout      
       User Test.    Date: 10/07/24  12:36:42  gradin.1     testout      
       User Test.    Date: 10/07/24  12:37:01  gradin.1     testout      
       User Test.    Date: 10/07/24  12:42:31  gradin.1     testout      
       User Test.    Date: 10/07/24  12:42:44  gradin.1     testout      
       User Test.    Date: 10/07/24  12:49:23  gradin.1     testout      
       User Test.    Date: 10/07/24  12:58:31  gradin.1     testout      
       User Test.    Date: 10/07/24  13:00:22  gradin.1     testout      
       User Test.    Date: 10/07/24  14:19:09  gradin.1     testout      
       User Test.    Date: 10/07/24  16:27:33  gradin.1     testout      
       User Test.    Date: 10/07/24  16:28:35  gradin.1     testout      
       User Test.    Date: 10/07/24  16:29:14  gradin.1     testout      
       User Test.    Date: 10/07/24  16:35:07  gradin.1     testout      
       User Test.    Date: 10/07/24  16:35:31  gradin.1     testout      
       User Test.    Date: 10/07/24  16:36:17  gradin.1     testout      
       User Test.    Date: 10/07/24  16:36:28  gradin.1     testout      
       User Test.    Date: 10/07/24  16:38:25  gradin.1     testout      
       User Test.    Date: 10/07/24  16:40:00  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  16:40:05 
       User Test.    Date: 10/07/24  16:41:00  gradin.1     testout      
       User Test.    Date: 10/07/24  16:43:26  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  16:43:31 
       User Test.    Date: 10/07/24  16:46:43  gradin.1     testout      
       User Test.    Date: 10/07/24  16:46:45  gradin.1     testout      
       User Test.    Date: 10/07/24  19:35:24  blank.in     testout      
       User Test.    Date: 10/07/24  19:36:58  blank.in     testout      
       User Test.    Date: 10/07/24  19:37:33  blank.in     testout      
       User Test.    Date: 10/07/24  20:06:12  gradin.1     testout      
       User Test.    Date: 10/07/24  20:08:14  gradin.1     testout      
       User Test.    Date: 10/07/24  20:09:23  gradin.1     testout      
       User Test.    Date: 10/07/24  20:13:32  gradin.1     testout      
       User Test.    Date: 10/07/24  20:15:29  gradin.1     testout      
       User Test.    Date: 10/07/24  20:16:40  gradin.1     testout      
   *** Grading Run.  Date: 10/07/24  20:16:46 
   Running test 01   ...  tabs   gradin.1
   Running test 01A  ...  tabs 6 gradin.1
   Running test 01B  ...  tabs 1 gradin.1
   Running test 02   ...  tabs   gradin.2
   Running test 02A  ...  tabs 5 gradin.2
   Running test 02B  ...  tabs 2 gradin.2
   Running test 03   ...  tabs   gradin.3
   Running test 03A  ...  tabs 7 gradin.3
   Running test 03B  ...  tabs 3 gradin.3
   *** Passed all functional tests
++ Grade ++   60 = Points earned for correct answers.

-> We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
 00 -  30 = 20 points 
 31 -  32 = 15 points 
 33 -  34 = 10 points 
 35 -  36 =  5 points 
 37+      =  0 points 
Your actual counts are:
Lines ....... 110    Comments ...  58    Labels .......   6   
Directives ..   6    Variables ..   3    Executables ..  37    McCabe ..   9 
++ Grade ++    0 = Points earned for code written efficiency.  

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0025 The program header format is adequate. 
DOCHB-0.54 Use of code blocks headers is marginal, -5 points. 
           Programs must be broken into small functional blocks of code.     
           Each block must have a header that describes the code's function. 
           See the Program Documentation Requirements on the WEB.            
DOCLC-0.89 Use of line comments is adequate. 
++ Grade ++   15 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++   75 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
   103  = Number of user tests.                                  
    13  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC6&k~C6&juiC7;&zuzC=;&Zkyz&jgzk@&7656=58:&&86@7<@:<&

Building the file tabs.ans for electronic submission...

;--------------------------------------------------------------------
;   Program:     COPYFILE *** MASM VERSION ***
;
;   Function:    This program will read characters from the standard input
;                device.  This can be the keyboard or a file that has been
;                redirected to the standard input.
;
;                It allows the software to examine each character.
;
;                The character is then written to the standard output device.
;                This can be the diplay or a file that has been redirected
;                to the standard output.
;
;				 Split tab input to print spaces until the next tab stop
;
;                The program terminates when the character that has been
;                read and echoed matches the character stored in the
;                variable named 'end_char'.
;   Owner:       Dana Lasher
;
;   Date         Reason
;   ----         ------
;   07/18/2000   New version
;
;---------------------------------------
         .model    small               ; 64k data and 64k code model
         .8086                         ; only allow 8086 instructions
         .stack    256                 ; stack size is 256 bytes
;---------------------------------------
         .data
;---------------------------------------
; The program ends when the last character
; read and echoed matches this variable.
; 1Ah=EOF   0Dh=ENTER
;---------------------------------------
end_char db        0Dh                 ; termination character
tab      db        09h				   ; tab characters
tabstop  db        0Ah                 ; column width
;---------------------------------------
         .code
;---------------------------------------
; Establish addressability to the data segment.
;---------------------------------------
start:                                 ;
         mov       ax,@data            ; establish addressability
         mov       ds,ax     		   ; for the data segment
		 mov 	   bl, 0			   ; set tabstop column count to 0
		 
		 cmp       byte ptr es:[80h], 0      ; access the CLP count 80h bytes into the extra segment       
		 je        getloop               ; no parameter ... continue with the program      
		 mov       al, byte ptr es:[82h]     ; parameter entered ... load al with the character    
		 sub       al, '0'              ; convert to decimal
		 mov       [tabstop], al         ; set tabstop
;---------------------------------------
; Read a charcter without echo.
;---------------------------------------
getloop:                               ;
         mov       ah,8                ; read without echo a character
         int       21h                 ; how: set ah=8 and issue int 21
;---------------------------------------
; The character is now available in the
; al register for processing.
;---------------------------------------
		 ;cmp       al, 1Ah			   ; compare to EOF to to jump back to character read
		 ;je        exit 

		 cmp      al, tab			   ; compare to tab character
		 jne	  write_char    	   ; write character if its not a tab
		 
space:
		 cmp       bl, [tabstop]	   ; compare 
		 je        newline			   ; if column is already 10 jump pack
		 mov       dl, 20h			   ; move ' ' into dl
		 mov       ah, 2			   	   ; set interupt
		 int       21h				   ; print space
		 add       bl, 1			   ; increment column
		 jne       space                ; if not yet reached, continue printing spaces
         jmp       getloop              ; once tabstop is reached, read next char
		
newline:
		 mov       bl, 0			   ; set column counter to 0
		 jmp       getloop			   ; jump back to read character
;---------------------------------------
; Write out the character and loop if it
; is not the terminating character.
;---------------------------------------
write_char:
         mov       dl,al               ; move the char to dl
         mov       ah, 2               ; write the character from dl
         int       21h    	    	   ; how: set ah=2 and issue int 21
		 add 	   bl, 1               ; increment column
		 cmp       al, 1Ah			   ; compare to EOF to to jump back to character read
		 je        exit 
		 cmp       al, end_char		   ; Compare to carraige return
 		 je 	   newline             ; set column to 0
		 cmp       bl, [tabstop]         ;
		 je        newline             ; set column to 0 if cap reached
		 cmp       al, 0Ah         ;
		 je        newline             ; set column to 0 if line feed
		 jmp       getloop
									   
;---------------------------------------
; When the terminating characater has
; been read and echoed, return to DOS.
;---------------------------------------
exit:                                  ; we processed the terminating character
         mov       ax,4c00h            ; set correct exit code in ax
         int       21h                 ; int 21 will terminate program
         end       start               ; execution begins at the label start
;---------------------------------------
